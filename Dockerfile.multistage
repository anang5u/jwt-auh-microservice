# syntax=docker/dockerfile:1

# Build the application from source
FROM golang:1.20 AS build-stage

WORKDIR /usr/src/app

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -o /jwt-auth-microservice

# Run the tests in the container
FROM build-stage AS run-test-stage
RUN go test -v ./...

# Deploy the application binary into a lean image
FROM gcr.io/distroless/base-debian11 AS build-release-stage

WORKDIR /

COPY --from=build-stage /jwt-auth-microservice /jwt-auth-microservice
COPY --from=build-stage /usr/src/app/certs/private_key.pem /certs/private_key.pem
COPY --from=build-stage /usr/src/app/config.json /config.json
COPY --from=build-stage /usr/src/app/jwks.json /jwks.json

EXPOSE 8080

USER nonroot:nonroot

ENTRYPOINT ["/jwt-auth-microservice"]